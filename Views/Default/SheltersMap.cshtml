
@{
    ViewBag.Title = "SheltersMap";
    Layout = "~/Views/Shared/_TestLayout.cshtml";
}


<head>
    <meta charset='utf-8' />
    <title>Store Locator</title>
    <meta name='robots' content='noindex, nofollow'>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,700' rel='stylesheet'>
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v2.0.1/mapbox-gl.js'></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v2.0.1/mapbox-gl.css' rel='stylesheet' />
    <style>
        body {
            color: #404040;
            font: 400 15px/22px 'Source Sans Pro', 'Helvetica Neue', Sans-serif;
            margin: 0;
            padding: 0;
            -webkit-font-smoothing: antialiased;
        }

        * {
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }

        .sidebar {
            /*position: absolute;*/
            width: 300px;
            height: 400px;
            /*top: 0;
            left: 0;*/
            overflow: hidden;
            border-right: 1px solid rgba(0, 0, 0, 0.25);
            float:left;
        }

        .pad2 {
            padding: 20px;
        }

        .map {
            /*position:absolute;*/
            
            width: 960px;
            height:400px;
            float: left;
        }

        h1 {
            font-size: 22px;
            margin: 0;
            font-weight: 400;
            line-height: 20px;
            padding: 20px 2px;
        }

        a {
            color: #404040;
            text-decoration: none;
        }

            a:hover {
                color: #101010;
            }

        .heading {
            background: #fff;
            border-bottom: 1px solid #eee;
            min-height: 60px;
            line-height: 60px;
            padding: 0 10px;
            background-color: #00853e;
            color: #fff;
        }

        .listings {
            height: 340px;
            overflow: auto;
            /*padding-bottom: 60px;*/
        }

            .listings .item {
                display: block;
                border-bottom: 1px solid #eee;
                padding: 10px;
                text-decoration: none;
            }

                .listings .item:last-child {
                    border-bottom: none;
                }

                .listings .item .title {
                    display: block;
                    color: #00853e;
                    font-weight: 700;
                }

                    .listings .item .title small {
                        font-weight: 400;
                    }

                    .listings .item.active .title,
                    .listings .item .title:hover {
                        color: #8cc63f;
                    }

                .listings .item.active {
                    background-color: #f8f8f8;
                }

        ::-webkit-scrollbar {
            width: 3px;
            height: 3px;
            border-left: 0;
            background: rgba(0, 0, 0, 0.1);
        }

        ::-webkit-scrollbar-track {
            background: none;
        }

        ::-webkit-scrollbar-thumb {
            background: #00853e;
            border-radius: 0;
        }

        .marker {
            border: none;
            cursor: pointer;
            height: 32px;
            width: 32px;
            background-image: url(/web/images/marker.png);
            background-size: cover;
            background-color: rgba(0, 0, 0, 0);
        }

        .clearfix {
            display: block;
        }

            .clearfix:after {
                content: '.';
                display: block;
                height: 0;
                clear: both;
                visibility: hidden;
            }

        /* Marker tweaks */
        .mapboxgl-popup {
            padding-bottom: 50px;
        }

        .mapboxgl-popup-close-button {
            display: none;
        }

        .mapboxgl-popup-content {
            font: 400 15px/22px 'Source Sans Pro', 'Helvetica Neue', Sans-serif;
            padding: 0;
            width: 180px;
        }

        .mapboxgl-popup-content-wrapper {
            padding: 1%;
        }

        .mapboxgl-popup-content h3 {
            background: #91c949;
            color: #fff;
            margin: 0;
            display: block;
            padding: 10px;
            border-radius: 3px 3px 0 0;
            font-weight: 700;
            margin-top: -15px;
        }

        .mapboxgl-popup-content h4 {
            margin: 0;
            display: block;
            padding: 10px 10px 10px 10px;
            font-weight: 400;
        }

        .mapboxgl-popup-content div {
            padding: 10px;
        }

        .mapboxgl-container .leaflet-marker-icon {
            cursor: pointer;
        }

        .mapboxgl-popup-anchor-top > .mapboxgl-popup-content {
            margin-top: 15px;
        }

        .mapboxgl-popup-anchor-top > .mapboxgl-popup-tip {
            border-bottom-color: #91c949;
        }
    </style>
</head>
    
</head>

<body>
        <div class='sidebar'>
            <div class='heading'>
                <h1>Our locations</h1>
            </div>
            <div id='listings' class='listings'></div>
        </div>
        <div id='map' class='map'></div>
    <div class="clearfix"></div>
    <script>
        // This will let you use the .remove() function later on
        if (!('remove' in Element.prototype)) {
            Element.prototype.remove = function () {
                if (this.parentNode) {
                    this.parentNode.removeChild(this);
                }
            };
        }

        mapboxgl.accessToken = 'pk.eyJ1IjoicHlibGwiLCJhIjoiY2tqemozdXVwMDgxdzJvcnJybXdibWUzbyJ9.OwtbtaxxmNYnmJOIjiJ2Gw';
        /**
         * Add the map to the page
        */
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/light-v10',
            center: [-79.424211, 43.662409],
            zoom: 10,
            scrollZoom: false
        });

        var stores = {
            "type": "FeatureCollection",
            "name": "housing_shelters_211",

            "features": [
                { "type": "Feature", "properties": { "ID": "MET6100", "NAME": "Christie Ossington Neighbourhood Centre, South Site, South-Men's Shelter and Drop-in Food Access Program", "ADDRESS": "850 and 854 Bloor St W\n", "LATITUDE": 43.662409, "LONGITUDE": -79.424211, "POSTAL": "M6G1M2" }, "geometry": { "type": "Point", "coordinates": [-79.424211, 43.662409] } },
                { "type": "Feature", "properties": { "ID": "MET4398", "NAME": "Cornerstone Place", "ADDRESS": "616 Vaughan Rd\n", "LATITUDE": 43.691962, "LONGITUDE": -79.439859, "POSTAL": "M6C2R5" }, "geometry": { "type": "Point", "coordinates": [-79.439859, 43.691962] } },
                { "type": "Feature", "properties": { "ID": "MET0720", "NAME": "Nellie's, Nellie's Shelter", "ADDRESS": "Toronto Downtown East", "LATITUDE": 43.653226, "LONGITUDE": -79.383184, "POSTAL": "M4M1J8" }, "geometry": { "type": "Point", "coordinates": [-79.383184, 43.653226] } },
                { "type": "Feature", "properties": { "ID": "MET3701", "NAME": "Out of the Cold. Overnight Shelters, All Saints', Friday Overnight Hostel for Men", "ADDRESS": "2850 Bloor St W\n", "LATITUDE": 43.649077, "LONGITUDE": -79.505071, "POSTAL": "M8X1B2" }, "geometry": { "type": "Point", "coordinates": [-79.505071, 43.649077] } },
                { "type": "Feature", "properties": { "ID": "MET4872", "NAME": "Out of the Cold. Overnight Shelters, Beth Emeth, Monday Overnight Hostel, January\/February", "ADDRESS": "100 Elder St\n", "LATITUDE": 43.760631, "LONGITUDE": -79.453551, "POSTAL": "M3H5G7" }, "geometry": { "type": "Point", "coordinates": [-79.453551, 43.760631] } },
                { "type": "Feature", "properties": { "ID": "MET4662", "NAME": "Out of the Cold. Overnight Shelters, Beth Shol, Tuesday Overnight Hostel, January to March", "ADDRESS": "1445 Eglinton Ave W\n", "LATITUDE": 43.698233, "LONGITUDE": -79.438236, "POSTAL": "M6C2E6" }, "geometry": { "type": "Point", "coordinates": [-79.438236, 43.698233] } },
                { "type": "Feature", "properties": { "ID": "MET3490", "NAME": "Out of the Cold. Overnight Shelters, Blythwood Road, Saturday Overnight Hostel", "ADDRESS": "80 Blythwood Rd\n", "LATITUDE": 43.717584, "LONGITUDE": -79.398082, "POSTAL": "M4N1A4" }, "geometry": { "type": "Point", "coordinates": [-79.398082, 43.717584] } },
                { "type": "Feature", "properties": { "ID": "MET3615", "NAME": "Out of the Cold. Overnight Shelters, Chinese Go, Thursday Overnight Hostel for Men, January to March", "ADDRESS": "450 Dundas St W\n", "LATITUDE": 43.653484, "LONGITUDE": -79.395917, "POSTAL": "M5T1G7" }, "geometry": { "type": "Point", "coordinates": [-79.395917, 43.653484] } },
                { "type": "Feature", "properties": { "ID": "MET3058", "NAME": "Out of the Cold. Overnight Shelters, Eastminster Unit, Friday Overnight Hostel", "ADDRESS": "310 Danforth Ave\n", "LATITUDE": 43.677472, "LONGITUDE": -79.353723, "POSTAL": "M4K1N6" }, "geometry": { "type": "Point", "coordinates": [-79.353723, 43.677472] } },
                { "type": "Feature", "properties": { "ID": "MET5438", "NAME": "Out of the Cold. Overnight Shelters, Emanuel Hall, Tuesday Overnight Hostel", "ADDRESS": "552 Adelaide St W\n", "LATITUDE": 43.64545, "LONGITUDE": -79.40243, "POSTAL": "M5V3W8" }, "geometry": { "type": "Point", "coordinates": [-79.40243, 43.64545] } },
                { "type": "Feature", "properties": { "ID": "MET5608", "NAME": "Out of the Cold. Overnight Shelters, First Matthew's Unit, Thursday Overnight Hostel", "ADDRESS": "729 St Clair Ave W, Bsmt\n", "LATITUDE": 43.681239, "LONGITUDE": -79.427246, "POSTAL": "M6C1B2" }, "geometry": { "type": "Point", "coordinates": [-79.427246, 43.681239] } },
                { "type": "Feature", "properties": { "ID": "MET3616", "NAME": "Out of the Cold. Overnight Shelters, Blossom Temp, Thursday Overnight Hostel *Closed", "ADDRESS": "1950 Bathurst St", "LATITUDE": 43.698268, "LONGITUDE": -79.425178, "POSTAL": "M5P3K9" }, "geometry": { "type": "Point", "coordinates": [-79.425178, 43.698268] } },
                { "type": "Feature", "properties": { "ID": "MET0445", "NAME": "Out of the Cold. Overnight Shelters, Knox Unit, Friday Overnight Hostel", "ADDRESS": "2575 Midland Ave\n", "LATITUDE": 43.786796, "LONGITUDE": -79.278609, "POSTAL": "M1S1R3" }, "geometry": { "type": "Point", "coordinates": [-79.278609, 43.786796] } },
                { "type": "Feature", "properties": { "ID": "MET0347", "NAME": "Out of the Cold. Overnight Shelters, St Aidan, Monday Overnight Hostel", "ADDRESS": "70 Silver Birch Ave\n", "LATITUDE": 43.672327, "LONGITUDE": -79.285218, "POSTAL": "M4E3K9" }, "geometry": { "type": "Point", "coordinates": [-79.285218, 43.672327] } },
                { "type": "Feature", "properties": { "ID": "MET3542", "NAME": "Out of the Cold. Overnight Shelters, Catherine of Siena, Monday Overnight Hostel", "ADDRESS": "1099 Danforth Ave\n", "LATITUDE": 43.680783, "LONGITUDE": -79.334987, "POSTAL": "M4J1M5" }, "geometry": { "type": "Point", "coordinates": [-79.334987, 43.680783] } },
                { "type": "Feature", "properties": { "ID": "MET5024", "NAME": "Out of the Cold. Overnight Shelters, St Margaret New Toronto, Monday Overnight Hostel for Men", "ADDRESS": "156 Sixth St\n", "LATITUDE": 43.602222, "LONGITUDE": -79.504875, "POSTAL": "M8V3A5" }, "geometry": { "type": "Point", "coordinates": [-79.504875, 43.602222] } },
                { "type": "Feature", "properties": { "ID": "MET4426", "NAME": "Out of the Cold. Overnight Shelters, St Matthew\/Our Lady of Peace, Sunday Overnight Hostel for Men", "ADDRESS": "3962 Bloor St W\n", "LATITUDE": 43.639397, "LONGITUDE": -79.548921, "POSTAL": "M9B1M3" }, "geometry": { "type": "Point", "coordinates": [-79.548921, 43.639397] } },
                { "type": "Feature", "properties": { "ID": "MET0417", "NAME": "Out of the Cold. Overnight Shelters, St Patrit, Sunday Overnight Hostel", "ADDRESS": "139 McCaul St\n", "LATITUDE": 43.654885, "LONGITUDE": -79.391543, "POSTAL": "M5T1W3" }, "geometry": { "type": "Point", "coordinates": [-79.391543, 43.654885] } },
                { "type": "Feature", "properties": { "ID": "MET4425", "NAME": "Out of the Cold. Overnight Shelters, University Settlement Recreation Centre, Friday, Saturday and Sunday Overnight Hostel, Winter Schedule - October to May", "ADDRESS": "23 Grange Rd\n", "LATITUDE": 43.652052, "LONGITUDE": -79.391474, "POSTAL": "M5T1C3" }, "geometry": { "type": "Point", "coordinates": [-79.391474, 43.652052] } },
                { "type": "Feature", "properties": { "ID": "MET1409", "NAME": "Out of the Cold. Overnight Shelters, University Settlement Recreation Centre, Saturday and Sunday Overnight Hostel, Summer Schedule - June to September", "ADDRESS": "23 Grange Rd\n", "LATITUDE": 43.652052, "LONGITUDE": -79.391474, "POSTAL": "M5T1C3" }, "geometry": { "type": "Point", "coordinates": [-79.391474, 43.652052] } },
                { "type": "Feature", "properties": { "ID": "MET3067", "NAME": "Out of the Cold. Overnight Shelters, Yorkminster Park, Wednesday Overnight Hostel", "ADDRESS": "1585 Yonge St\n", "LATITUDE": 43.690595, "LONGITUDE": -79.394225, "POSTAL": "M4T1Z9" }, "geometry": { "type": "Point", "coordinates": [-79.394225, 43.690595] } },
                { "type": "Feature", "properties": { "ID": "MET1254", "NAME": "Red Door Family Shelter", "ADDRESS": "1430 Gerrard St E\n", "LATITUDE": 43.672337, "LONGITUDE": -79.322282, "POSTAL": "M4L1Z6" }, "geometry": { "type": "Point", "coordinates": [-79.322282, 43.672337] } },
                { "type": "Feature", "properties": { "ID": "MET1460", "NAME": "Salvation Army, New Hope Leslieville Shelter", "ADDRESS": "29\/29A Leslie St\n", "LATITUDE": 43.661969, "LONGITUDE": -79.329504, "POSTAL": "M4M3C3" }, "geometry": { "type": "Point", "coordinates": [-79.329504, 43.661969] } },
                { "type": "Feature", "properties": { "ID": "MET0402", "NAME": "Toronto. Shelter, Support and Housing Administration. Homelessness Initiatives and Prevention Services, Birkdale Residence", "ADDRESS": "1229 Ellesmere Rd", "LATITUDE": 43.653226, "LONGITUDE": -79.383184, "POSTAL": "M1P4V8" }, "geometry": { "type": "Point", "coordinates": [-79.383184, 43.653226] } }
            ]
        };

        /**
         * Assign a unique id to each store. You'll use this `id`
         * later to associate each point on the map with a listing
         * in the sidebar.
        */
        stores.features.forEach(function (store, i) {
            store.properties.id = i;
        });

        /**
         * Wait until the map loads to make changes to the map.
        */
        map.on('load', function (e) {
            /**
             * This is where your '.addLayer()' used to be, instead
             * add only the source without styling a layer
            */
            map.addSource("places", {
                "type": "geojson",
                "data": stores
            });

            /**
             * Add all the things to the page:
             * - The location listings on the side of the page
             * - The markers onto the map
            */
            buildLocationList(stores);
            addMarkers();
        });

        /**
         * Add a marker to the map for every store listing.
        **/
        function addMarkers() {
            /* For each feature in the GeoJSON object above: */
            stores.features.forEach(function (marker) {
                /* Create a div element for the marker. */
                var el = document.createElement('div');
                /* Assign a unique `id` to the marker. */
                el.id = "marker-" + marker.properties.id;
                /* Assign the `marker` class to each marker for styling. */
                el.className = 'marker';

                /**
                 * Create a marker using the div element
                 * defined above and add it to the map.
                **/
                new mapboxgl.Marker(el, { offset: [0, -23] })
                    .setLngLat(marker.geometry.coordinates)
                    .addTo(map);

                /**
                 * Listen to the element and when it is clicked, do three things:
                 * 1. Fly to the point
                 * 2. Close all other popups and display popup for clicked store
                 * 3. Highlight listing in sidebar (and remove highlight for all other listings)
                **/
                el.addEventListener('click', function (e) {
                    /* Fly to the point */
                    flyToStore(marker);
                    /* Close all other popups and display popup for clicked store */
                    createPopUp(marker);
                    /* Highlight listing in sidebar */
                    var activeItem = document.getElementsByClassName('active');
                    e.stopPropagation();
                    if (activeItem[0]) {
                        activeItem[0].classList.remove('active');
                    }
                    var listing = document.getElementById('listing-' + marker.properties.id);
                    listing.classList.add('active');
                });
            });
        }

        /**
         * Add a listing for each store to the sidebar.
        **/
        function buildLocationList(data) {
            data.features.forEach(function (store, i) {
                /**
                 * Create a shortcut for `store.properties`,
                 * which will be used several times below.
                **/
                var prop = store.properties;

                /* Add a new listing section to the sidebar. */
                var listings = document.getElementById('listings');
                var listing = listings.appendChild(document.createElement('div'));
                /* Assign a unique `id` to the listing. */
                listing.id = "listing-" + prop.id;
                /* Assign the `item` class to each listing for styling. */
                listing.className = 'item';

                /* Add the link to the individual listing created above. */
                var link = listing.appendChild(document.createElement('a'));
                link.href = '#';
                link.className = 'title';
                link.id = "link-" + prop.id;
                link.innerHTML = prop.NAME;

                /* Add details to the individual listing. */
                var details = listing.appendChild(document.createElement('div'));
                details.innerHTML = prop.ADDRESS;
                if (prop.phone) {
                    details.innerHTML += ' · ' + prop.phoneFormatted;
                }

                /**
                 * Listen to the element and when it is clicked, do four things:
                 * 1. Update the `currentFeature` to the store associated with the clicked link
                 * 2. Fly to the point
                 * 3. Close all other popups and display popup for clicked store
                 * 4. Highlight listing in sidebar (and remove highlight for all other listings)
                **/
                link.addEventListener('click', function (e) {
                    for (var i = 0; i < data.features.length; i++) {
                        if (this.id === "link-" + data.features[i].properties.id) {
                            var clickedListing = data.features[i];
                            flyToStore(clickedListing);
                            createPopUp(clickedListing);
                        }
                    }
                    var activeItem = document.getElementsByClassName('active');
                    if (activeItem[0]) {
                        activeItem[0].classList.remove('active');
                    }
                    this.parentNode.classList.add('active');
                });
            });
        }

        /**
         * Use Mapbox GL JS's `flyTo` to move the camera smoothly
         * a given center point.
        **/
        function flyToStore(currentFeature) {
            map.flyTo({
                center: currentFeature.geometry.coordinates,
                zoom: 15
            });
        }

        /**
         * Create a Mapbox GL JS `Popup`.
        **/
        function createPopUp(currentFeature) {
            var popUps = document.getElementsByClassName('mapboxgl-popup');
            if (popUps[0]) popUps[0].remove();
            var popup = new mapboxgl.Popup({ closeOnClick: false })
                .setLngLat(currentFeature.geometry.coordinates)
                .setHTML('<h3>A Warm Home</h3>' +
                    '<h4>Postal: ' + currentFeature.properties.POSTAL + '</h4>')
                .addTo(map);
        }
    </script>
</body>
